#!/usr/bin/env php
<?php

set_time_limit(0);
ini_set('memory_limit', '2048M');

define('COMMAND_PATH', __DIR__);

$loader = require_once __DIR__ . '/vendor/autoload.php';

use Leaf\Application;
use Leaf\Console\UpCommand;
use Leaf\Console\DownCommand;
use Leaf\Console\Migrate;
use Leaf\Console\MigrateCreate;
use Leaf\Console\MigrateRollback;
use Leaf\Console\Crontab;
use Leaf\Generator\BundleCommand;
use Leaf\Generator\EntityCommand;
use Leaf\Generator\ApiCommand;
use Leaf\Generator\CurdCommand;
use PFinal\Queue\ListenCommand;
use PFinal\Queue\WorkCommand;
use Symfony\Component\Console\Application as ConsoleApplication;

$app = new Application();
require __DIR__ . '/config/app.php';
$app->init();

$console = new ConsoleApplication();
$console->add(new BundleCommand());
$console->add(new EntityCommand());
$console->add(new CurdCommand());
$console->add(new ApiCommand());
$console->add(new ListenCommand());
$console->add(new Migrate());
$console->add(new MigrateCreate());
$console->add(new MigrateRollback());
$console->add(new Crontab());
$console->add(new WorkCommand($app));

$console->add(new UpCommand());
$console->add(new DownCommand());

if (file_exists(__DIR__ . '/config/commands.php')) {
    $commands = require __DIR__ . '/config/commands.php';
    foreach ($commands as $command) {
        $console->add(new $command);
    }
}

$console->run();
